SPOILER


































































































*
function find(scale, coins) {
  "use strict";
  
  for (var i=1; i<coins.length; i++) {
    var result = scale(coins[i-1], coins[i]);
    
    if (result < 0) {
      return coins[i];
    }
    
    if (result > 0) {
      return coins[i-1];
    }
  }
}

**
function find(scale, coins) {
  "use strict";
  
  while (coins.length > 1) {
	var aThird = coins.length / 3 ;
    
    coins = find2(scale, coins.slice(0, aThird), 
      coins.slice(aThird, aThird*2), coins.slice(aThird*2));
  }
  
  return coins[0];
}

function find2(scale, left, center, right) {
  var result = scale(left, right);
  
  return (result === 0) ? center : ((result < 0) ? right : left);
}

***
function find(scale, coins) {
  "use strict";

  var aThird = coins.length / 3 ;

  coins = find2(scale, coins.slice(0, aThird), 
    coins.slice(aThird, aThird*2), coins.slice(aThird*2));

  return (coins.length > 1) ? find(scale, coins) : coins[0];
}

function find2(scale, left, center, right) {
  var result = scale(left, right);
  
  return (result === 0) ? center : ((result < 0) ? right : left);
}